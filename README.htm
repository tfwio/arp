<html>
<head>
  <title>Arpeggio</title>
  <meta charset="utf-8">
</head>
</body>
<p><header style="text-align: center;">
<h1 class="title">Arpeggio</h1>
<style>

body {
  font-family: Roboto Slab !important;
  
}

</style>
<!-- github-like md.css -->
<link rel="stylesheet" type="text/css" href="data:text/css;base64,">
<!--
<span class="author">tfw</span>
-->
<span class="date" style='float:right'>20170417</span>
</header>

<nav id="TOC">
<h3>TOC</h3>
<ul>
<li><a href="#arpeggiator-is">ARPEGGIATOR IS</a><ul>
<li><a href="#clocktiming">CLOCK/TIMING</a></li>
<li><a href="#windows-dev">WINDOWS DEV</a><ul>
<li><a href="#visual-studio-20132015">Visual Studio 2013+2015</a></li>
<li><a href="#codeblocks-notes">CodeBlocks notes</a></li>
</ul></li>
<li><a href="#non-windows-noop">NON-WINDOWS (noop)</a></li>
</ul></li>
<li><a href="#todo">TODO</a></li>
<li><a href="#license">license</a></li>
</ul>
</nav>
<figure>
<img src="resources/img/20170421_2251cst.png" alt="of 20170421_2251cst" /><figcaption>of 20170421_2251cst</figcaption>
</figure>
<p>its a fairly simple arpeggiator called ‘arpeggio’ for the moment.<br />guess we’ll see where this goes.</p>
<p>pre-release binaries for Windows XP and later [VC2013rt]: <a href="https://github.com/tfwio/arp/releases/download/20170501-r2/tfwio_arpeggio_vst-20170501-x86_and_x64.7z" title="tfwio_arpeggio_vst-20170501-x86_and_x64.7z">64+32 bit</a>.<br />There are just the dlls in the 7z archive (no readme er nuttin).</p>
<!-- The binaries are just the first working commit ATM. Compiling from source should yield better looking and/or better product. -->
<p>See the <a href="https://github.com/tfwio/arp/releases">releases</a> page.</p>
<hr />
<p><strong>PITCH CONTROL</strong> knob (-128 to 127) pitch-key up or down the scale; Notes fall out if not within [0-127] range.<br />Like the GATE knob/feature, this is one of the last things added could use some work on predicting/preventing note-on/off-overlap quirks.</p>
<p><strong>UI KEYBOARD</strong> — a little buggy when it comes to turning off the last note depressed since I had spent the least amount of time working a few changes into Tale’s MIDI-Keyboard <code>IControl</code>. (mouse-wheel) middle-click to stick a key down, right-click-drag to wipe clean specific depressed notes.<br />The bug is where/in when you right-click, the last key stuck down gets un-stuck—will get to it.</p>
<ul>
<li>left mouse-down/drag/up sends midi note-on/off messages to quantized, arpeggiated and triggered.</li>
<li>right mouse-down/drag to clear depressed notes</li>
<li>middle-click on a keys to make it stick down</li>
</ul>
<p>“<strong>K-AMP</strong>” on/off switch/button toggles enabling a amplitude knob which forces midi messages to the particular amp or otherwise relies on what you press in your midi keyboard (or in the tiny UI keys—the lower the louder)</p>
<p><strong>GATE</strong> — knob percentage from 1 to 200, generally for shrinking down the length of a generated note.<br />CAUTION: Generated NOTE_ON/NOTE_OFF combination will interfere when the same key gets repeated. This is an acceptable quirk as long as you’re aware. Like the KEY_PITCH knob/feature, this is one of the last things added could use some work on predicting note-on/off-overlaps.</p>
<p><strong>TIMING</strong>: BEATS (1-16) VS DIVS (1-64) knobs for controlling as well as…<br /> FIRST top row of fraction looking buttons are [1/n] divisions; Second row: [3/n] divisions and [4/n] divisions in the last. <em>will probably be re-written/designed</em></p>
<p><strong>SYNC</strong> button [on/off] should sync the timing to the DAW transport/clock if the transport is running.<br /> It can generate MIDI with the DAW in idle mode so play/stop DAW-transport to potentially re-sync if sync is on.</p>
<p><strong>PANIC</strong> button (triangle near midi-kb) releases all depressed keys/notes</p>
<p><strong>RAMPING</strong> 4 ramp modes at the moment: up, down, up-down and down-up. more to come of this area.</p>
<hr />
<p>This is generally for playing on your piano. There isn’t any latency/compensation (like “MIDI Strum” for example) which in a nut-shell translates to that when in a DAW’s piano-roll mode, the first trigger (multiple notes all hit at exactly the same 0-delta timing) might sequence out of order… So start-up notes would have to be ordered like you would when playing on a piano to ensure the notes are in sequence. If this changes, this note will too ;)</p>
<hr />
<p>If you’re not sure how to use a MIDI effect in live, it has to be VSTi. (See <a href="manual/live.gif">this img</a>)<br />Most DAW explain how they support MIDI effects if they do.<br />Ardour, Cubase, and REAPER among a few other DAW I’m aware of properly support MIDI VST effects (not compiled as instrument) chains properly.</p>
<h1 id="arpeggiator-is">ARPEGGIATOR IS</h1>
<p><a href="http://archive.oreilly.com/pub/a/oreilly/digitalmedia/2006/06/29/secrets-of-the-arpeggiator.html">Secrets of the Arpeggiator</a> — by Jim Atkin of O’Reilly Digital-Media (20060629).<br />Wikipedia — <a href="https://en.wikipedia.org/wiki/Arpeggio">Arpeggio</a></p>
<p>Firstly, most DAW include some form of an arpeggiator.</p>
<p>The following table is what has it my radar. There are more.</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">name</th>
<th style="text-align: left;">type</th>
<th style="text-align: left;">vendor uri</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Blue Arp</td>
<td style="text-align: left;">free</td>
<td style="text-align: left;"><a href="http://graywolf2004.net/wp/">graywolf2004.net</a></td>
</tr>
<tr class="even">
<td style="text-align: left;">Catanya</td>
<td style="text-align: left;">commercial</td>
<td style="text-align: left;"><a href="http://www.synthtopia.com/content/2009/08/07/catanya-vst-midi-arpeggiator-plugin/">see me</a>, search youtube.</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Kirnu</td>
<td style="text-align: left;">commercial*</td>
<td style="text-align: left;"><a href="http://www.kirnuarp.com/">kirnuarp.com</a></td>
</tr>
<tr class="even">
<td style="text-align: left;">Nora, NoraCM</td>
<td style="text-align: left;">commercial*</td>
<td style="text-align: left;"><a href="https://squaredheads.com/">squaredheads.com</a></td>
</tr>
<tr class="odd">
<td style="text-align: left;">MIDI Strum</td>
<td style="text-align: left;">Lv2</td>
<td style="text-align: left;"><a href="http://x42-plugins.com/x42/x42-midifilter">x42-plugins.com</a></td>
</tr>
</tbody>
</table>
<ul>
<li>*<em>Kirnu demo doesn’t allow you to store presets but works fine otherwise (I’m told)</em></li>
<li>*<em>NoraCM is distributed with Computer Music magazine (including digital editions).</em></li>
</ul>
<h2 id="clocktiming">CLOCK/TIMING</h2>
<pre class="sourceCode cpp"><code class="sourceCode cpp"><span class="co">// timing calculation</span>
<span class="co">// - Bb (class member) is our calculated beat</span>
<span class="co">// - Lb (class member) is the length of a beat division.</span>
<span class="kw">inline</span> int32 calculate()
{
  Bb = ((<span class="fl">60.</span><span class="dv">0</span> * mSampleRate / mBpm));
  Lb = <span class="dt">double</span>(mBeat) * (<span class="fl">1.</span> / <span class="dt">double</span>(mDiv)); 
  <span class="kw">if</span> (Lb &lt;= <span class="fl">0.</span>) Lb = <span class="fl">0.</span><span class="bn">00001</span>; <span class="co">// prevent zero division</span>

  <span class="dt">double</span> actualLength = Bb * Lb;
  mNoteDurationOn = int32(floor(actualLength));
  mNoteDurationOff = int32(floor((actualLength * mGateDiv))); <span class="co">// *bad</span>

  <span class="kw">return</span> mNoteDurationOn;
}</code></pre>
<h2 id="windows-dev">WINDOWS DEV</h2>
<ul>
<li>github.com/olilarkin/wdl-ol (you know)</li>
<li>github.com/tfwio/twix is a small include (extensions) library containing a few abstractions (IControls) and patches over IPLUG.</li>
<li>compiles in Visual Studio 2013 Express and 2015 Community</li>
<li>compiles in Codeblocks configured to msys2+GCC+boost</li>
</ul>
<h3 id="visual-studio-20132015">Visual Studio 2013+2015</h3>
<ul>
<li>wdl-ol/iplug
<ul>
<li>common includes and few cpp dependencies are in there (such as a patch)</li>
<li>wihtout the notes on the readme there this would be fairly difficult to compile.</li>
</ul></li>
<li>compilation options
<ol>
<li>using VisualStudio 2013 Express load the SLN (<strong>Arpeggio.sln</strong>)</li>
<li>using VisualStudio 2015 Community load the SLN (<strong>Arpeggio-vc2015_c-r3.sln</strong>)</li>
</ol></li>
</ul>
<h3 id="codeblocks-notes">CodeBlocks notes</h3>
<p>using BOOST filesystem lib and msys64-mingw32/GCC-6.3 at the moment</p>
<p>I named the compiler configuarion <code>GCC msys64/mingw64</code> so when creating your 64-bit compiler configuration for using the codeblocks projects, using that will prevent a few more project-config steps.<br /><em>eventually there’ll’ be slate-template project… and these notes will move to the twix project-space…</em></p>
<ul>
<li>targeting x64
<ul>
<li>in stead of using compiler flag <code>-fpermissive</code> globally, we’re applying this only to the cpp files that need it.
<ul>
<li><code>WDL/IPlug/IPlugGraphicsWin.cpp</code></li>
<li><code>[your-plugmain-including-IPlug_include_in_plug_src.h].cpp</code>
<ul>
<li><strong>This is significant to x64 host-compatibility</strong>. I’m using <code>__declspec(dllexport) void* VSTPluginMain(audioMasterCallback hostCallback)</code> because it works in all the VstHosts I’ve tested as opposed to <code>#define EXPORT __attribute__ ((visibility(&quot;default&quot;)))</code>—er whatever.</li>
</ul></li>
<li>Local <code>*.cbp</code>’s have these settings but if you try compiling targeting x64, we need to apply the <code>-fpermissive</code> flag to a couple file properties.<br /> Right-Click the file and select the compiler targeting x64, check the checkbox and type into the textbox:<br /> <code>$compiler $options $includes -c $file -o $object -fpermissive</code>.</li>
</ul></li>
</ul></li>
<li>targeting x64 abd x86 we want to apply the same config setting to <code>IGraphicsWin.cpp</code>.<br /> <code>$compiler $options $includes -c $file -o $object -fpermissive</code></li>
<li>x86 include search directories (example)
<ul>
<li><code>C:\msys64\mingw32\include</code></li>
<li><code>C:\msys64\mingw32\i686-w64-mingw32\include</code></li>
<li><code>C:\msys64\mingw32\include\c++\6.3.0</code></li>
</ul></li>
<li>x86 linker search directories (example)
<ul>
<li><code>C:\msys64\mingw32\lib</code></li>
<li><code>C:\msys64\mingw32\i686-w64-mingw32\lib</code></li>
</ul></li>
<li>x64 include search directories (example)
<ul>
<li><code>C:\msys64\mingw64\include</code></li>
<li><code>C:\msys64\mingw64\x86_64-w64-mingw32\include</code></li>
<li><code>C:\msys64\mingw64\include\c++\6.3.0</code></li>
</ul></li>
<li>x64 linker search directories (example)
<ul>
<li><code>C:\msys64\mingw64\lib</code></li>
<li><code>C:\msys64\mingw64\x86_64-w64-mingw32\lib</code></li>
</ul></li>
</ul>
<p>Feel free to ‘comment’ any issues or questions on the comment sections of the github-commit pages.</p>
<h2 id="non-windows-noop">NON-WINDOWS (noop)</h2>
<p>Theoretically it be possible yet even easy but we need a few hacks into IGraphics to get the global timer (if its similarly implemented in windows) to trigger a call to <code>void IGraphics::OnTimer</code> and possibly implement some mouse-cursor native API for a particular text-control that’ll end up being used in here. Otherwise you can simply disable the <code>OnTimer</code> updates all-together and move what is (currently) only text-updates to the audio-thread. I would prefer this to be an animation example not running off of the audio-thread in due time—even if I do have to buy an old duo-book-pro.</p>
<h1 id="todo">TODO</h1>
<ul>
<li>few more ramp modes</li>
<li>MIDI channel specific notes</li>
<li>preset, bank?</li>
<li>sub-intervals, div level 2 (another layer of divisions with pitch or other controller ramping methods applied)</li>
<li>MODULATION MATRIX editor making for more PARAMs
<ul>
<li>mod wheel</li>
<li>pitch wheel</li>
<li>LFO/CC-trigger</li>
</ul></li>
<li>UI
<ul>
<li>param triggers for key-offset (pitch knob)
<ul>
<li>maybe note ‘collision prevention’ if it works out</li>
</ul></li>
<li>skinning possibilities / *.ini er whatever</li>
</ul></li>
<li>presets and/or midi import/export</li>
<li><em>There may or may not be prevention/detection for this in the future.</em></li>
<li>what else?</li>
</ul>
<h1 id="license">license</h1>
<pre><code>© tfw 2016-2017
disclaims any to all liability</code></pre>
<ul>
<li><strong><a href="http://www.cockos.com/wdl/">cockos/wdl</a></strong></li>
<li><strong><a href="http://www.nullsoft.com/free/jnetlib">JNetLib</a></strong></li>
<li><strong><a href="http://www.libpng.org/pub/png">LibPNG</a></strong></li>
<li><strong><a href="https://sourceforge.net/projects/giflib/">GifLib</a></strong></li>
<li><strong><a href="http://www.ijg.org/">JPEGLib</a></strong></li>
<li><strong><a href="http://www.zlib.net">zlib</a></strong></li>
<li><strong><a href="http://www.taletn.com/wdl/">taletn/wdl</a></strong>, <a href="https://github.com/TaleTN/WDL">github</a></li>
<li><strong><a href="https://github.com/olilarkin/wdl-ol">olilarkin/wdl-ol</a></strong></li>
</ul>
<p>all rights reserved</p>
<!--https://vignette4.wikia.nocookie.net/looneytunes/images/b/b1/Daffypearl.gif/revision/latest?cb=20060212075938-->
<figure>
<img src="manual/license.jpg" />
</figure>
</body>
</html><style>
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
</style>
